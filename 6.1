server.js :
const express = require("express");
const app = express();

// ----------------------------
// 1. Logging Middleware
// ----------------------------
app.use((req, res, next) => {
    const timestamp = new Date().toISOString();
    console.log(`[${timestamp}] ${req.method} ${req.originalUrl}`);
    next(); // Pass control to the next middleware/route
});

// ----------------------------
// 2. Bearer Token Authentication Middleware
// ----------------------------
function authenticateToken(req, res, next) {
    const authHeader = req.headers["authorization"];

    if (!authHeader) {
        return res.status(401).json({ message: "Authorization header missing" });
    }

    const token = authHeader.split(" ")[1]; // Expecting "Bearer <token>"

    if (token !== "mysecrettoken") {
        return res.status(403).json({ message: "Invalid or missing token" });
    }

    // Token is valid
    next();
}

// ----------------------------
// 3. Routes
// ----------------------------

// Public route (no authentication)
app.get("/public", (req, res) => {
    res.json({ message: "Welcome to the public route! No token needed." });
});

// Protected route (requires Bearer token)
app.get("/protected", authenticateToken, (req, res) => {
    res.json({ message: "You have access to the protected route!" });
});

// ----------------------------
// 4. Start Server
// ----------------------------
const PORT = 3000;
app.listen(PORT, () => {
    console.log(`Server running at http://localhost:${PORT}`);
});
